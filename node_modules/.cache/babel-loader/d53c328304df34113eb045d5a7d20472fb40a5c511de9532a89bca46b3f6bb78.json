{"ast":null,"code":"var _jsxFileName = \"/Users/taro/mara-hack/src/components/DisasterSimulator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisasterSimulator = ({\n  siteData,\n  onSiteDataUpdate\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: 'system',\n    content: 'Natural Disaster Simulation System Online',\n    timestamp: Date.now()\n  }, {\n    type: 'assistant',\n    content: 'I can simulate natural disasters and their effects on your mining operations. Try asking me to simulate events like \"heat wave in Texas\" or \"drought in Idaho\".',\n    timestamp: Date.now()\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSimulating, setIsSimulating] = useState(false);\n  const [originalData, setOriginalData] = useState(null);\n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Disaster effect definitions\n  const disasterEffects = {\n    'heat_wave': {\n      name: 'Heat Wave',\n      description: 'Extreme temperatures causing thermal throttling and grid curtailment',\n      effects: {\n        power_reduction: 0.3,\n        efficiency_reduction: 0.25,\n        affected_machines: ['air_miners', 'gpu_compute'],\n        electricity_multiplier: 1.4\n      }\n    },\n    'cold_snap': {\n      name: 'Cold Snap',\n      description: 'Severe cold improving cooling but risking grid instability',\n      effects: {\n        power_reduction: 0.15,\n        efficiency_boost: 0.1,\n        affected_machines: ['air_miners'],\n        electricity_multiplier: 1.2\n      }\n    },\n    'drought': {\n      name: 'Drought',\n      description: 'Water shortage severely impacting hydro-cooled operations',\n      effects: {\n        power_reduction: 0.6,\n        efficiency_reduction: 0.4,\n        affected_machines: ['hydro_miners', 'immersion_miners'],\n        electricity_multiplier: 1.1\n      }\n    },\n    'heavy_rainfall': {\n      name: 'Heavy Rainfall',\n      description: 'Abundant water boosting hydro capacity and cooling efficiency',\n      effects: {\n        power_boost: 0.2,\n        efficiency_boost: 0.15,\n        affected_machines: ['hydro_miners', 'immersion_miners'],\n        electricity_multiplier: 0.9\n      }\n    },\n    'wildfire': {\n      name: 'Wildfire',\n      description: 'Smoke and grid instability forcing emergency shutdowns',\n      effects: {\n        power_reduction: 0.8,\n        efficiency_reduction: 0.6,\n        affected_machines: ['air_miners', 'hydro_miners', 'gpu_compute'],\n        electricity_multiplier: 1.6\n      }\n    },\n    'flooding': {\n      name: 'Flooding',\n      description: 'Physical infrastructure damage and power outages',\n      effects: {\n        power_reduction: 0.9,\n        efficiency_reduction: 0.8,\n        affected_machines: ['all'],\n        electricity_multiplier: 2.0\n      }\n    },\n    'tornado': {\n      name: 'Tornado',\n      description: 'Catastrophic infrastructure damage requiring emergency shutdown',\n      effects: {\n        power_reduction: 1.0,\n        efficiency_reduction: 1.0,\n        affected_machines: ['all'],\n        electricity_multiplier: 3.0\n      }\n    },\n    'blizzard': {\n      name: 'Blizzard',\n      description: 'Power line failures despite improved cooling conditions',\n      effects: {\n        power_reduction: 0.4,\n        efficiency_reduction: 0.2,\n        affected_machines: ['air_miners', 'gpu_compute'],\n        electricity_multiplier: 1.3\n      }\n    }\n  };\n\n  // Location-specific disaster susceptibility\n  const locationRisks = {\n    'RockdaleTX': ['heat_wave', 'tornado', 'flooding'],\n    'CheyenneWY': ['cold_snap', 'blizzard', 'wildfire'],\n    'ButteMT': ['wildfire', 'cold_snap', 'drought'],\n    'MassaNY': ['cold_snap', 'blizzard', 'flooding'],\n    'AtlantaGA': ['heat_wave', 'tornado', 'flooding'],\n    'NashvilleTN': ['tornado', 'flooding', 'heat_wave'],\n    'OklahomaCityOK': ['tornado', 'heat_wave', 'drought'],\n    'BoiseID': ['wildfire', 'drought', 'heavy_rainfall'],\n    'KearnyNE': ['tornado', 'blizzard', 'drought'],\n    'ColumbusOH': ['cold_snap', 'tornado', 'flooding']\n  };\n  const detectDisasterFromMessage = message => {\n    const lowercaseMessage = message.toLowerCase();\n\n    // Detect disaster type\n    let disasterType = null;\n    if (lowercaseMessage.includes('heat') || lowercaseMessage.includes('hot') || lowercaseMessage.includes('temperature')) {\n      disasterType = 'heat_wave';\n    } else if (lowercaseMessage.includes('cold') || lowercaseMessage.includes('freeze') || lowercaseMessage.includes('frost')) {\n      disasterType = 'cold_snap';\n    } else if (lowercaseMessage.includes('drought') || lowercaseMessage.includes('dry')) {\n      disasterType = 'drought';\n    } else if (lowercaseMessage.includes('rain') || lowercaseMessage.includes('flood') && !lowercaseMessage.includes('wildfire')) {\n      disasterType = lowercaseMessage.includes('flood') ? 'flooding' : 'heavy_rainfall';\n    } else if (lowercaseMessage.includes('fire') || lowercaseMessage.includes('wildfire')) {\n      disasterType = 'wildfire';\n    } else if (lowercaseMessage.includes('tornado') || lowercaseMessage.includes('twister')) {\n      disasterType = 'tornado';\n    } else if (lowercaseMessage.includes('blizzard') || lowercaseMessage.includes('snow')) {\n      disasterType = 'blizzard';\n    }\n\n    // Detect affected locations\n    const affectedLocations = [];\n    Object.keys(locationRisks).forEach(siteId => {\n      const site = siteData.sites.find(s => s.id === siteId);\n      if (site) {\n        var _site$location$split$;\n        const locationName = site.location.toLowerCase();\n        const stateName = (_site$location$split$ = site.location.split(', ')[1]) === null || _site$location$split$ === void 0 ? void 0 : _site$location$split$.toLowerCase();\n        if (lowercaseMessage.includes(locationName) || lowercaseMessage.includes(stateName) || lowercaseMessage.includes(site.name.toLowerCase())) {\n          affectedLocations.push(siteId);\n        }\n      }\n    });\n\n    // If no specific location mentioned, find susceptible locations\n    if (affectedLocations.length === 0 && disasterType) {\n      Object.entries(locationRisks).forEach(([siteId, risks]) => {\n        if (risks.includes(disasterType)) {\n          affectedLocations.push(siteId);\n        }\n      });\n    }\n    return {\n      disasterType,\n      affectedLocations\n    };\n  };\n  const simulateDisaster = async (disasterType, affectedLocations) => {\n    if (!originalData) {\n      setOriginalData(JSON.parse(JSON.stringify(siteData)));\n    }\n    const disaster = disasterEffects[disasterType];\n    const updatedSiteData = JSON.parse(JSON.stringify(siteData));\n    let totalImpactedProfit = 0;\n    let impactedSites = [];\n    affectedLocations.forEach(siteId => {\n      const siteIndex = updatedSiteData.sites.findIndex(s => s.id === siteId);\n      if (siteIndex !== -1) {\n        const site = updatedSiteData.sites[siteIndex];\n        const originalProfit = site.optimization.net_profit;\n\n        // Apply disaster effects\n        if (disaster.effects.power_reduction) {\n          const reductionFactor = 1 - disaster.effects.power_reduction;\n          site.optimization.net_profit *= reductionFactor;\n          site.optimization.total_revenue *= reductionFactor;\n          site.optimization.power_used *= reductionFactor;\n        }\n        if (disaster.effects.power_boost) {\n          const boostFactor = 1 + disaster.effects.power_boost;\n          site.optimization.net_profit *= boostFactor;\n          site.optimization.total_revenue *= boostFactor;\n          site.optimization.power_used = Math.min(site.optimization.power_used * boostFactor, 1000000);\n        }\n\n        // Adjust machine allocations\n        if (disaster.effects.affected_machines.includes('all')) {\n          Object.keys(site.machine_allocation).forEach(machineType => {\n            site.machine_allocation[machineType] = 0;\n          });\n        } else {\n          disaster.effects.affected_machines.forEach(machineType => {\n            if (site.machine_allocation[machineType]) {\n              const reductionFactor = disaster.effects.power_reduction || 1 - disaster.effects.power_boost || 0;\n              site.machine_allocation[machineType] = Math.floor(site.machine_allocation[machineType] * (1 - reductionFactor));\n            }\n          });\n        }\n\n        // Adjust electricity costs\n        site.electricity_cost_per_mwh *= disaster.effects.electricity_multiplier;\n        site.electricity_multiplier *= disaster.effects.electricity_multiplier;\n        const impactAmount = originalProfit - site.optimization.net_profit;\n        totalImpactedProfit += impactAmount;\n        impactedSites.push({\n          name: site.name,\n          location: site.location,\n          originalProfit,\n          newProfit: site.optimization.net_profit,\n          impact: impactAmount\n        });\n      }\n    });\n\n    // Recalculate total profit\n    updatedSiteData.total_profit = updatedSiteData.sites.reduce((sum, site) => sum + site.optimization.net_profit, 0);\n    onSiteDataUpdate(updatedSiteData);\n    setIsSimulating(true);\n    return {\n      totalImpactedProfit,\n      impactedSites,\n      disaster\n    };\n  };\n  const restoreNormalOperations = () => {\n    if (originalData) {\n      onSiteDataUpdate(originalData);\n      setOriginalData(null);\n      setIsSimulating(false);\n      setMessages(prev => [...prev, {\n        type: 'system',\n        content: 'Operations restored to normal baseline conditions.',\n        timestamp: Date.now()\n      }]);\n    }\n  };\n  const callOpenRouterAPI = async (userMessage, simulationContext = null) => {\n    const apiKey = process.env.REACT_APP_OPENROUTER_API_KEY;\n    const systemPrompt = `You are a sophisticated natural disaster simulation system for mining operations. You analyze the effects of various natural disasters on mining facilities across different US locations.\n\nAvailable disaster types:\n- Heat waves: Reduce efficiency, cause thermal throttling\n- Cold snaps: Can improve cooling but risk grid instability  \n- Droughts: Severely impact hydro-cooled operations\n- Heavy rainfall: Boost hydro capacity\n- Wildfires: Force emergency shutdowns\n- Flooding: Cause physical infrastructure damage\n- Tornadoes: Catastrophic damage requiring shutdowns\n- Blizzards: Power line failures despite cooling benefits\n\nRespond professionally and mention analyzing historic weather patterns when simulating events.\n\n${simulationContext ? `Current simulation: ${JSON.stringify(simulationContext)}` : ''}`;\n    try {\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\n        model: 'anthropic/claude-3.5-sonnet',\n        messages: [{\n          role: 'system',\n          content: systemPrompt\n        }, {\n          role: 'user',\n          content: userMessage\n        }],\n        max_tokens: 300,\n        temperature: 0.7\n      }, {\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.choices[0].message.content;\n    } catch (error) {\n      console.error('OpenRouter API Error:', error);\n      return \"I'm experiencing connection issues with the analysis system. Please try again in a moment.\";\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n    const userMessage = inputMessage.trim();\n    setInputMessage('');\n    setIsLoading(true);\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      type: 'user',\n      content: userMessage,\n      timestamp: Date.now()\n    }]);\n\n    // Check for restore command\n    if (userMessage.toLowerCase().includes('restore') || userMessage.toLowerCase().includes('normal') || userMessage.toLowerCase().includes('reset')) {\n      restoreNormalOperations();\n      setIsLoading(false);\n      return;\n    }\n\n    // Detect disaster simulation request\n    const {\n      disasterType,\n      affectedLocations\n    } = detectDisasterFromMessage(userMessage);\n    try {\n      let simulationResults = null;\n      if (disasterType && affectedLocations.length > 0) {\n        // Add simulation status message\n        setMessages(prev => [...prev, {\n          type: 'system',\n          content: `Pulling historic weather data for ${disasterEffects[disasterType].name} events...`,\n          timestamp: Date.now()\n        }]);\n\n        // Simulate the disaster\n        simulationResults = await simulateDisaster(disasterType, affectedLocations);\n      }\n\n      // Get AI response\n      const aiResponse = await callOpenRouterAPI(userMessage, simulationResults);\n\n      // Add AI response\n      setMessages(prev => [...prev, {\n        type: 'assistant',\n        content: aiResponse,\n        timestamp: Date.now()\n      }]);\n\n      // Add simulation results if applicable\n      if (simulationResults) {\n        const {\n          totalImpactedProfit,\n          impactedSites,\n          disaster\n        } = simulationResults;\n        const impactSummary = `Simulation Results:\nEvent: ${disaster.name}\nTotal Profit Impact: $${Math.abs(totalImpactedProfit).toLocaleString()}\nSites Affected: ${impactedSites.length}\n\nMost Affected Sites:\n${impactedSites.sort((a, b) => Math.abs(b.impact) - Math.abs(a.impact)).slice(0, 3).map(site => `${site.name}: $${Math.abs(site.impact).toLocaleString()} impact`).join('\\n')}\n\nType \"restore normal operations\" to return to baseline.`;\n        setMessages(prev => [...prev, {\n          type: 'simulation',\n          content: impactSummary,\n          timestamp: Date.now()\n        }]);\n      }\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        type: 'error',\n        content: 'Simulation system encountered an error. Please try again.',\n        timestamp: Date.now()\n      }]);\n    }\n    setIsLoading(false);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"disaster-simulator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulator-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"simulator-title\",\n        children: \"Disaster Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"simulator-status\",\n        children: isSimulating ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-active\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-dot active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Simulation Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-normal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-dot normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Normal Operations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      ref: chatContainerRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: new Date(message.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant loading\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-dots\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Ask me to simulate disasters like 'heat wave in Texas' or 'drought in Idaho'...\",\n        rows: 2,\n        disabled: isLoading,\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: isLoading || !inputMessage.trim(),\n        className: \"send-button\",\n        children: isLoading ? '...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), isSimulating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restore-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restoreNormalOperations,\n        className: \"restore-button\",\n        children: \"Restore Normal Operations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n};\n_s(DisasterSimulator, \"GaChaiAeJHKhLxOdj2TwwJ29uXY=\");\n_c = DisasterSimulator;\nexport default DisasterSimulator;\nvar _c;\n$RefreshReg$(_c, \"DisasterSimulator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","DisasterSimulator","siteData","onSiteDataUpdate","_s","messages","setMessages","type","content","timestamp","Date","now","inputMessage","setInputMessage","isLoading","setIsLoading","isSimulating","setIsSimulating","originalData","setOriginalData","messagesEndRef","chatContainerRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","disasterEffects","name","description","effects","power_reduction","efficiency_reduction","affected_machines","electricity_multiplier","efficiency_boost","power_boost","locationRisks","detectDisasterFromMessage","message","lowercaseMessage","toLowerCase","disasterType","includes","affectedLocations","Object","keys","forEach","siteId","site","sites","find","s","id","_site$location$split$","locationName","location","stateName","split","push","length","entries","risks","simulateDisaster","JSON","parse","stringify","disaster","updatedSiteData","totalImpactedProfit","impactedSites","siteIndex","findIndex","originalProfit","optimization","net_profit","reductionFactor","total_revenue","power_used","boostFactor","Math","min","machine_allocation","machineType","floor","electricity_cost_per_mwh","impactAmount","newProfit","impact","total_profit","reduce","sum","restoreNormalOperations","prev","callOpenRouterAPI","userMessage","simulationContext","apiKey","process","env","REACT_APP_OPENROUTER_API_KEY","systemPrompt","response","post","model","role","max_tokens","temperature","headers","data","choices","error","console","handleSendMessage","trim","simulationResults","aiResponse","impactSummary","abs","toLocaleString","sort","a","b","slice","map","join","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","index","toLocaleTimeString","value","onChange","target","onKeyPress","placeholder","rows","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/taro/mara-hack/src/components/DisasterSimulator.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nconst DisasterSimulator = ({ siteData, onSiteDataUpdate }) => {\n  const [messages, setMessages] = useState([\n    {\n      type: 'system',\n      content: 'Natural Disaster Simulation System Online',\n      timestamp: Date.now()\n    },\n    {\n      type: 'assistant',\n      content: 'I can simulate natural disasters and their effects on your mining operations. Try asking me to simulate events like \"heat wave in Texas\" or \"drought in Idaho\".',\n      timestamp: Date.now()\n    }\n  ]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSimulating, setIsSimulating] = useState(false);\n  const [originalData, setOriginalData] = useState(null);\n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Disaster effect definitions\n  const disasterEffects = {\n    'heat_wave': {\n      name: 'Heat Wave',\n      description: 'Extreme temperatures causing thermal throttling and grid curtailment',\n      effects: {\n        power_reduction: 0.3,\n        efficiency_reduction: 0.25,\n        affected_machines: ['air_miners', 'gpu_compute'],\n        electricity_multiplier: 1.4\n      }\n    },\n    'cold_snap': {\n      name: 'Cold Snap',\n      description: 'Severe cold improving cooling but risking grid instability',\n      effects: {\n        power_reduction: 0.15,\n        efficiency_boost: 0.1,\n        affected_machines: ['air_miners'],\n        electricity_multiplier: 1.2\n      }\n    },\n    'drought': {\n      name: 'Drought',\n      description: 'Water shortage severely impacting hydro-cooled operations',\n      effects: {\n        power_reduction: 0.6,\n        efficiency_reduction: 0.4,\n        affected_machines: ['hydro_miners', 'immersion_miners'],\n        electricity_multiplier: 1.1\n      }\n    },\n    'heavy_rainfall': {\n      name: 'Heavy Rainfall',\n      description: 'Abundant water boosting hydro capacity and cooling efficiency',\n      effects: {\n        power_boost: 0.2,\n        efficiency_boost: 0.15,\n        affected_machines: ['hydro_miners', 'immersion_miners'],\n        electricity_multiplier: 0.9\n      }\n    },\n    'wildfire': {\n      name: 'Wildfire',\n      description: 'Smoke and grid instability forcing emergency shutdowns',\n      effects: {\n        power_reduction: 0.8,\n        efficiency_reduction: 0.6,\n        affected_machines: ['air_miners', 'hydro_miners', 'gpu_compute'],\n        electricity_multiplier: 1.6\n      }\n    },\n    'flooding': {\n      name: 'Flooding',\n      description: 'Physical infrastructure damage and power outages',\n      effects: {\n        power_reduction: 0.9,\n        efficiency_reduction: 0.8,\n        affected_machines: ['all'],\n        electricity_multiplier: 2.0\n      }\n    },\n    'tornado': {\n      name: 'Tornado',\n      description: 'Catastrophic infrastructure damage requiring emergency shutdown',\n      effects: {\n        power_reduction: 1.0,\n        efficiency_reduction: 1.0,\n        affected_machines: ['all'],\n        electricity_multiplier: 3.0\n      }\n    },\n    'blizzard': {\n      name: 'Blizzard',\n      description: 'Power line failures despite improved cooling conditions',\n      effects: {\n        power_reduction: 0.4,\n        efficiency_reduction: 0.2,\n        affected_machines: ['air_miners', 'gpu_compute'],\n        electricity_multiplier: 1.3\n      }\n    }\n  };\n\n  // Location-specific disaster susceptibility\n  const locationRisks = {\n    'RockdaleTX': ['heat_wave', 'tornado', 'flooding'],\n    'CheyenneWY': ['cold_snap', 'blizzard', 'wildfire'],\n    'ButteMT': ['wildfire', 'cold_snap', 'drought'],\n    'MassaNY': ['cold_snap', 'blizzard', 'flooding'],\n    'AtlantaGA': ['heat_wave', 'tornado', 'flooding'],\n    'NashvilleTN': ['tornado', 'flooding', 'heat_wave'],\n    'OklahomaCityOK': ['tornado', 'heat_wave', 'drought'],\n    'BoiseID': ['wildfire', 'drought', 'heavy_rainfall'],\n    'KearnyNE': ['tornado', 'blizzard', 'drought'],\n    'ColumbusOH': ['cold_snap', 'tornado', 'flooding']\n  };\n\n  const detectDisasterFromMessage = (message) => {\n    const lowercaseMessage = message.toLowerCase();\n    \n    // Detect disaster type\n    let disasterType = null;\n    if (lowercaseMessage.includes('heat') || lowercaseMessage.includes('hot') || lowercaseMessage.includes('temperature')) {\n      disasterType = 'heat_wave';\n    } else if (lowercaseMessage.includes('cold') || lowercaseMessage.includes('freeze') || lowercaseMessage.includes('frost')) {\n      disasterType = 'cold_snap';\n    } else if (lowercaseMessage.includes('drought') || lowercaseMessage.includes('dry')) {\n      disasterType = 'drought';\n    } else if (lowercaseMessage.includes('rain') || lowercaseMessage.includes('flood') && !lowercaseMessage.includes('wildfire')) {\n      disasterType = lowercaseMessage.includes('flood') ? 'flooding' : 'heavy_rainfall';\n    } else if (lowercaseMessage.includes('fire') || lowercaseMessage.includes('wildfire')) {\n      disasterType = 'wildfire';\n    } else if (lowercaseMessage.includes('tornado') || lowercaseMessage.includes('twister')) {\n      disasterType = 'tornado';\n    } else if (lowercaseMessage.includes('blizzard') || lowercaseMessage.includes('snow')) {\n      disasterType = 'blizzard';\n    }\n\n    // Detect affected locations\n    const affectedLocations = [];\n    Object.keys(locationRisks).forEach(siteId => {\n      const site = siteData.sites.find(s => s.id === siteId);\n      if (site) {\n        const locationName = site.location.toLowerCase();\n        const stateName = site.location.split(', ')[1]?.toLowerCase();\n        if (lowercaseMessage.includes(locationName) || \n            lowercaseMessage.includes(stateName) ||\n            lowercaseMessage.includes(site.name.toLowerCase())) {\n          affectedLocations.push(siteId);\n        }\n      }\n    });\n\n    // If no specific location mentioned, find susceptible locations\n    if (affectedLocations.length === 0 && disasterType) {\n      Object.entries(locationRisks).forEach(([siteId, risks]) => {\n        if (risks.includes(disasterType)) {\n          affectedLocations.push(siteId);\n        }\n      });\n    }\n\n    return { disasterType, affectedLocations };\n  };\n\n  const simulateDisaster = async (disasterType, affectedLocations) => {\n    if (!originalData) {\n      setOriginalData(JSON.parse(JSON.stringify(siteData)));\n    }\n\n    const disaster = disasterEffects[disasterType];\n    const updatedSiteData = JSON.parse(JSON.stringify(siteData));\n\n    let totalImpactedProfit = 0;\n    let impactedSites = [];\n\n    affectedLocations.forEach(siteId => {\n      const siteIndex = updatedSiteData.sites.findIndex(s => s.id === siteId);\n      if (siteIndex !== -1) {\n        const site = updatedSiteData.sites[siteIndex];\n        const originalProfit = site.optimization.net_profit;\n\n        // Apply disaster effects\n        if (disaster.effects.power_reduction) {\n          const reductionFactor = 1 - disaster.effects.power_reduction;\n          site.optimization.net_profit *= reductionFactor;\n          site.optimization.total_revenue *= reductionFactor;\n          site.optimization.power_used *= reductionFactor;\n        }\n\n        if (disaster.effects.power_boost) {\n          const boostFactor = 1 + disaster.effects.power_boost;\n          site.optimization.net_profit *= boostFactor;\n          site.optimization.total_revenue *= boostFactor;\n          site.optimization.power_used = Math.min(site.optimization.power_used * boostFactor, 1000000);\n        }\n\n        // Adjust machine allocations\n        if (disaster.effects.affected_machines.includes('all')) {\n          Object.keys(site.machine_allocation).forEach(machineType => {\n            site.machine_allocation[machineType] = 0;\n          });\n        } else {\n          disaster.effects.affected_machines.forEach(machineType => {\n            if (site.machine_allocation[machineType]) {\n              const reductionFactor = disaster.effects.power_reduction || (1 - disaster.effects.power_boost || 0);\n              site.machine_allocation[machineType] = Math.floor(\n                site.machine_allocation[machineType] * (1 - reductionFactor)\n              );\n            }\n          });\n        }\n\n        // Adjust electricity costs\n        site.electricity_cost_per_mwh *= disaster.effects.electricity_multiplier;\n        site.electricity_multiplier *= disaster.effects.electricity_multiplier;\n\n        const impactAmount = originalProfit - site.optimization.net_profit;\n        totalImpactedProfit += impactAmount;\n        impactedSites.push({\n          name: site.name,\n          location: site.location,\n          originalProfit,\n          newProfit: site.optimization.net_profit,\n          impact: impactAmount\n        });\n      }\n    });\n\n    // Recalculate total profit\n    updatedSiteData.total_profit = updatedSiteData.sites.reduce(\n      (sum, site) => sum + site.optimization.net_profit, 0\n    );\n\n    onSiteDataUpdate(updatedSiteData);\n    setIsSimulating(true);\n\n    return { totalImpactedProfit, impactedSites, disaster };\n  };\n\n  const restoreNormalOperations = () => {\n    if (originalData) {\n      onSiteDataUpdate(originalData);\n      setOriginalData(null);\n      setIsSimulating(false);\n      \n      setMessages(prev => [...prev, {\n        type: 'system',\n        content: 'Operations restored to normal baseline conditions.',\n        timestamp: Date.now()\n      }]);\n    }\n  };\n\n  const callOpenRouterAPI = async (userMessage, simulationContext = null) => {\n    const apiKey = process.env.REACT_APP_OPENROUTER_API_KEY;\n    \n    const systemPrompt = `You are a sophisticated natural disaster simulation system for mining operations. You analyze the effects of various natural disasters on mining facilities across different US locations.\n\nAvailable disaster types:\n- Heat waves: Reduce efficiency, cause thermal throttling\n- Cold snaps: Can improve cooling but risk grid instability  \n- Droughts: Severely impact hydro-cooled operations\n- Heavy rainfall: Boost hydro capacity\n- Wildfires: Force emergency shutdowns\n- Flooding: Cause physical infrastructure damage\n- Tornadoes: Catastrophic damage requiring shutdowns\n- Blizzards: Power line failures despite cooling benefits\n\nRespond professionally and mention analyzing historic weather patterns when simulating events.\n\n${simulationContext ? `Current simulation: ${JSON.stringify(simulationContext)}` : ''}`;\n\n    try {\n      const response = await axios.post(\n        'https://openrouter.ai/api/v1/chat/completions',\n        {\n          model: 'anthropic/claude-3.5-sonnet',\n          messages: [\n            { role: 'system', content: systemPrompt },\n            { role: 'user', content: userMessage }\n          ],\n          max_tokens: 300,\n          temperature: 0.7\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${apiKey}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      return response.data.choices[0].message.content;\n    } catch (error) {\n      console.error('OpenRouter API Error:', error);\n      return \"I'm experiencing connection issues with the analysis system. Please try again in a moment.\";\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage = inputMessage.trim();\n    setInputMessage('');\n    setIsLoading(true);\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      type: 'user',\n      content: userMessage,\n      timestamp: Date.now()\n    }]);\n\n    // Check for restore command\n    if (userMessage.toLowerCase().includes('restore') || \n        userMessage.toLowerCase().includes('normal') ||\n        userMessage.toLowerCase().includes('reset')) {\n      restoreNormalOperations();\n      setIsLoading(false);\n      return;\n    }\n\n    // Detect disaster simulation request\n    const { disasterType, affectedLocations } = detectDisasterFromMessage(userMessage);\n\n    try {\n      let simulationResults = null;\n      \n      if (disasterType && affectedLocations.length > 0) {\n        // Add simulation status message\n        setMessages(prev => [...prev, {\n          type: 'system',\n          content: `Pulling historic weather data for ${disasterEffects[disasterType].name} events...`,\n          timestamp: Date.now()\n        }]);\n\n        // Simulate the disaster\n        simulationResults = await simulateDisaster(disasterType, affectedLocations);\n      }\n\n      // Get AI response\n      const aiResponse = await callOpenRouterAPI(userMessage, simulationResults);\n\n      // Add AI response\n      setMessages(prev => [...prev, {\n        type: 'assistant',\n        content: aiResponse,\n        timestamp: Date.now()\n      }]);\n\n      // Add simulation results if applicable\n      if (simulationResults) {\n        const { totalImpactedProfit, impactedSites, disaster } = simulationResults;\n        \n        const impactSummary = `Simulation Results:\nEvent: ${disaster.name}\nTotal Profit Impact: $${Math.abs(totalImpactedProfit).toLocaleString()}\nSites Affected: ${impactedSites.length}\n\nMost Affected Sites:\n${impactedSites\n  .sort((a, b) => Math.abs(b.impact) - Math.abs(a.impact))\n  .slice(0, 3)\n  .map(site => `${site.name}: $${Math.abs(site.impact).toLocaleString()} impact`)\n  .join('\\n')}\n\nType \"restore normal operations\" to return to baseline.`;\n\n        setMessages(prev => [...prev, {\n          type: 'simulation',\n          content: impactSummary,\n          timestamp: Date.now()\n        }]);\n      }\n\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        type: 'error',\n        content: 'Simulation system encountered an error. Please try again.',\n        timestamp: Date.now()\n      }]);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"disaster-simulator\">\n      <div className=\"simulator-header\">\n        <div className=\"simulator-title\">Disaster Simulation</div>\n        <div className=\"simulator-status\">\n          {isSimulating ? (\n            <div className=\"status-active\">\n              <div className=\"status-dot active\"></div>\n              <span>Simulation Active</span>\n            </div>\n          ) : (\n            <div className=\"status-normal\">\n              <div className=\"status-dot normal\"></div>\n              <span>Normal Operations</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"chat-container\" ref={chatContainerRef}>\n        <div className=\"messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.type}`}>\n              <div className=\"message-content\">\n                {message.content}\n              </div>\n              <div className=\"message-time\">\n                {new Date(message.timestamp).toLocaleTimeString()}\n              </div>\n            </div>\n          ))}\n          {isLoading && (\n            <div className=\"message assistant loading\">\n              <div className=\"message-content\">\n                <div className=\"loading-dots\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n\n      <div className=\"chat-input-container\">\n        <textarea\n          value={inputMessage}\n          onChange={(e) => setInputMessage(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Ask me to simulate disasters like 'heat wave in Texas' or 'drought in Idaho'...\"\n          rows={2}\n          disabled={isLoading}\n          className=\"chat-input\"\n        />\n        <button \n          onClick={handleSendMessage} \n          disabled={isLoading || !inputMessage.trim()}\n          className=\"send-button\"\n        >\n          {isLoading ? '...' : 'Send'}\n        </button>\n      </div>\n\n      {isSimulating && (\n        <div className=\"restore-panel\">\n          <button onClick={restoreNormalOperations} className=\"restore-button\">\n            Restore Normal Operations\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DisasterSimulator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}